Q1
// Parent class BankAccount
class BankAccount {
    // Private fields to store the account number and balance
    private String accountNumber;
    private double balance;

    // Constructor to initialize account number and balance
    public BankAccount(String accountNumber, double balance) {
        this.accountNumber = accountNumber;
        this.balance = balance;
    }

    // Method to deposit an amount into the account
    public void deposit(double amount) {
        balance += amount; // Increase the balance by the deposit amount
    }

    // Method to withdraw an amount from the account
    public void withdraw(double amount) {
        if (balance >= amount) {
            balance -= amount; // Decrease the balance by the withdrawal amount
        } else {
            System.out.println("Insufficient balance"); // Notify insufficient balance
        }
    }

    // Method to get the current balance
    public double getBalance() {
        return balance; // Return the current balance
    }
}
// Child class SavingsAccount
 class SavingsAccount extends BankAccount {
    // Constructor to initialize account number and balance
    public SavingsAccount(String accountNumber, double balance) {
        super(accountNumber, balance); // Call the parent class constructor
    }

    // Override the withdraw method from the parent class
    @Override
    public void withdraw(double amount) {
        if (getBalance() - amount < 100) {
            System.out.println("Minimum balance of $100 required!"); // Check minimum balance
        } else {
            super.withdraw(amount); // Call the parent class withdraw method
        }
    }
}
// Main class to test the BankAccount and SavingsAccount classes
public class Main {
    public static void main(String[] args) {
        // Create a BankAccount object (A/c No. BA1234) with initial balance of $500
        System.out.println("Create a Bank Account object (A/c No. BA1234) with initial balance of $500:");
        BankAccount BA1234 = new BankAccount("BA1234", 500);

        // Deposit $1000 into account BA1234
        System.out.println("Deposit $1000 into account BA1234:");
        BA1234.deposit(1000);
        System.out.println("New balance after depositing $1000: $" + BA1234.getBalance());

        // Withdraw $600 from account BA1234
        System.out.println("Withdraw $600 from account BA1234:");
        BA1234.withdraw(600);
        System.out.println("New balance after withdrawing $600: $" + BA1234.getBalance());

        // Create a SavingsAccount object (A/c No. SA1000) with initial balance of $300
        System.out.println("Create a SavingsAccount object (A/c No. SA1000) with initial balance of $300:");
        SavingsAccount SA1000 = new SavingsAccount("SA1000", 300);

        // Try to withdraw $250 from SA1000
        System.out.println("Try to withdraw $250 from SA1000!");
        SA1000.withdraw(250);
        System.out.println("Balance after trying to withdraw $250: $" + SA1000.getBalance());
    }
}
Q2
// Base class Mobile
class Mobile {
    String brand;
    String model;

    // Constructor for Mobile
    public Mobile(String brand, String model) {
        this.brand = brand;
        this.model = model;
    }

    // Method to print basic mobile manufacturing message
    public void basicMobile() {
        System.out.println("Basic Mobile is Manufactured");
    }
}

// Subclass CameraMobile extending Mobile
class CameraMobile extends Mobile {
    int cameraQuality;

    // Constructor for CameraMobile
    public CameraMobile(String brand, String model, int cameraQuality) {
        super(brand, model);  // Call the parent constructor
        this.cameraQuality = cameraQuality;
    }

    // Overriding the basicMobile method to print Camera Mobile is Manufactured
    @Override
    public void basicMobile() {
        System.out.println("Camera Mobile is Manufactured");
    }

    // Additional method to print Camera Mobile with 5MG px
    public void cameraDetails() {
        System.out.println("Camera Mobile with 5MG px");
    }
}

// Subclass AndroidMobile extending CameraMobile
class AndroidMobile extends CameraMobile {
    String androidVersion;

    // Constructor for AndroidMobile
    public AndroidMobile(String brand, String model, int cameraQuality, String androidVersion) {
        super(brand, model, cameraQuality);  // Call the parent constructor
        this.androidVersion = androidVersion;
    }

    // Overriding the basicMobile method to print Android Mobile is Manufactured
    @Override
    public void basicMobile() {
        System.out.println("Android Mobile is Manufactured");
    }

    // Method to print Touch Screen Mobile is Manufactured
    public void touchScreen() {
        System.out.println("Touch Screen Mobile is Manufactured");
    }
}

// Main class to test the functionality
public class Main {
    public static void main(String[] args) {
        // Creating a basic mobile object
        Mobile basicPhone = new Mobile("Nokia", "3310");
        basicPhone.basicMobile();  // Output: Basic Mobile is Manufactured

        // Creating a camera mobile object
        CameraMobile cameraPhone = new CameraMobile("Sony", "Xperia", 5);
        cameraPhone.basicMobile();  // Output: Camera Mobile is Manufactured

        // Creating an Android mobile object
        AndroidMobile androidPhone = new AndroidMobile("Samsung", "Galaxy S21", 108, "11");
        androidPhone.basicMobile();  // Output: Android Mobile is Manufactured
        androidPhone.cameraDetails();  // Output: Camera Mobile with 5MG px
        androidPhone.touchScreen();  // Output: Touch Screen Mobile is Manufactured
    }
}
Q3
class College {
    protected String collegeName;

    public College(String collegeName) {
        // Initialize the instance variable
        this.collegeName = collegeName;
    }

    public void admitted() {
        System.out.println("A student admitted in " + collegeName);
    }
}

class Student extends College {
    private String studentName;
    private String department;

    public Student(String collegeName, String studentName, String department) {
        // Initialize the instance variables
        super(collegeName); // Call to the parent class constructor
        this.studentName = studentName;
        this.department = department;
    }

    @Override
    public String toString() {
        // Return the details of the student
        return "CollegeName : " + collegeName + "\n" +
               "StudentName : " + studentName + "\n" +
               "Department : " + department;
    }
}

public class Main {
    public static void main(String[] args) {
        Student s1 = new Student("REC", "Venkatesh", "CSE");
        
        // Invoke the admitted() method
        s1.admitted();
        
        // Print student details
        System.out.println(s1.toString()); 
    }
}
